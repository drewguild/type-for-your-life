{"version":3,"sources":["words.js","Game.js","GameOver.js","Welcome.js","WPMMeter.js","App.js","serviceWorker.js","index.js"],"names":["WORDS","Game","props","handleKeying","e","processCharacter","key","completedStyle","color","borderRight","borderRightColor","borderLeft","borderLeftColor","upcomingStyle","state","behind","completed","upcoming","initial","window","addEventListener","this","removeEventListener","clearInterval","chaser","prevProps","addUpcoming","startChaser","speed","restartChaser","length","setState","concat","Math","floor","random","stopChaser","setInterval","popCompleted","char","undefined","onGameOver","slice","onScore","onIncorrectKey","style","React","Component","GameOver","score","onClick","onReplay","Welcome","margine","padding","background","onStart","WPMMeter","active","wpm","upperThreshold","onPassUpperThreshold","lowerThreshold","onPassLowerThreshold","marginTop","border","borderRadius","MODE","App","mode","wpmSample","initializeWPMCalculator","wpmCalculator","calculateWPM","seconds","sort","integer","content","sidebar","replay","gameOver","increaseSpeed","int","increaseScore","incrementWPMSample","decreaseSpeed","className","id","float","marginRight","fontSize","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mNAAMA,EAAQ,CACZ,MACA,OACA,QACA,UACA,MACA,OACA,QACA,SACA,MACA,OACA,QACA,SACA,MACA,OACA,QACA,SACA,MACA,OACA,QACA,SACA,MACA,OACA,QACA,SACA,MACA,OACA,QACA,SACA,MACA,OACA,QACA,SACA,MACA,OACA,QACA,SACA,MACA,OACA,QACA,SACA,MACA,OACA,QACA,SACA,MACA,OACA,QACA,SACA,MACA,OACA,QACA,SACA,MACA,OACA,QACA,SACA,MACA,OACA,QACA,SACA,MACA,OACA,QACA,SACA,MACA,OACA,QACA,SACA,MACA,OACA,QACA,SACA,MACA,OACA,QACA,UACA,MACA,OACA,QACA,SACA,MACA,OACA,QACA,SACA,MACA,OACA,QACA,SACA,MACA,OACA,QACA,SACA,MACA,OACA,SACA,MACA,OACA,QACA,UCeaC,E,kDA7Gb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IASRC,aAAe,SAACC,GACd,EAAKC,iBAAiBD,EAAEE,MAXP,EAoFnBC,eAAiB,CACfC,MAAO,QACPC,YAAa,QACbC,iBAAkB,QAClBC,WAAY,QACZC,gBAAiB,OAzFA,EA4FnBC,cAAgB,CACdL,MAAO,QA1FP,EAAKM,MAAQ,CACXC,OAAQ,GACRC,UAAW,GACXC,SAAU,EAAKf,MAAMgB,SANN,E,gEAejBC,OAAOC,iBAAiB,UAAWC,KAAKlB,gB,6CAIxCgB,OAAOG,oBAAoB,UAAWD,KAAKlB,cAC3CoB,cAAcF,KAAKG,U,yCAGFC,GACjBJ,KAAKK,cACLL,KAAKM,cAEDN,KAAKG,QAAUC,EAAUG,QAAUP,KAAKnB,MAAM0B,OAChDP,KAAKQ,kB,oCAKHR,KAAKP,MAAMG,SAASa,OAAS,GAC/BT,KAAKU,SAAS,CACZd,SAAUI,KAAKP,MAAMG,SAASe,OAAO,ID+DpChC,EAAMiC,KAAKC,MAAMD,KAAKE,SAAWnC,EAAM8B,c,sCC1D7B,IAAD,OACdT,KAAKe,aACLf,KAAKG,OAASa,aAAY,WAAQ,EAAKC,iBAAkBjB,KAAKnB,MAAM0B,S,oCAGvD,IAAD,OACRP,KAAKP,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","file":"static/js/main.71285530.chunk.js","sourcesContent":["const WORDS = [\r\n  \"ape\",\r\n  \"axel\",\r\n  \"apple\",\r\n  \"awesome\",\r\n  \"bat\",\r\n  \"blip\",\r\n  \"brand\",\r\n  \"bongos\",\r\n  \"cat\",\r\n  \"chip\",\r\n  \"cling\",\r\n  \"crying\",\r\n  \"dog\",\r\n  \"draw\",\r\n  \"dusty\",\r\n  \"dainty\",\r\n  \"eat\",\r\n  \"earn\",\r\n  \"epics\",\r\n  \"elicit\",\r\n  \"fan\",\r\n  \"flip\",\r\n  \"fangs\",\r\n  \"friend\",\r\n  \"get\",\r\n  \"goal\",\r\n  \"grass\",\r\n  \"gallop\",\r\n  \"hem\",\r\n  \"hiss\",\r\n  \"hello\",\r\n  \"health\",\r\n  \"ice\",\r\n  \"ibex\",\r\n  \"iliad\",\r\n  \"improv\",\r\n  \"jot\",\r\n  \"jolt\",\r\n  \"jaunt\",\r\n  \"jostle\",\r\n  \"kid\",\r\n  \"king\",\r\n  \"karst\",\r\n  \"kettle\",\r\n  \"let\",\r\n  \"line\",\r\n  \"lands\",\r\n  \"linger\",\r\n  \"man\",\r\n  \"most\",\r\n  \"marry\",\r\n  \"mingle\",\r\n  \"not\",\r\n  \"nest\",\r\n  \"navel\",\r\n  \"narwal\",\r\n  \"oat\",\r\n  \"omen\",\r\n  \"often\",\r\n  \"octets\",\r\n  \"pat\",\r\n  \"ping\",\r\n  \"pecks\",\r\n  \"preach\",\r\n  \"quo\",\r\n  \"quid\",\r\n  \"queue\",\r\n  \"quests\",\r\n  \"rat\",\r\n  \"read\",\r\n  \"ropes\",\r\n  \"return\",\r\n  \"sip\",\r\n  \"soup\",\r\n  \"stain\",\r\n  \"splurge\",\r\n  \"tan\",\r\n  \"trim\",\r\n  \"tempo\",\r\n  \"techno\",\r\n  \"urn\",\r\n  \"ulna\",\r\n  \"upper\",\r\n  \"urgent\",\r\n  \"vex\",\r\n  \"very\",\r\n  \"villa\",\r\n  \"verily\",\r\n  \"who\",\r\n  \"want\",\r\n  \"winks\",\r\n  \"wallop\",\r\n  \"yet\",\r\n  \"yeet\",\r\n  \"yarrow\",\r\n  \"zip\",\r\n  \"zoos\",\r\n  \"zesty\",\r\n  \"zinger\",\r\n]\r\n\r\nexport const randomWord = () => {\r\n  return WORDS[Math.floor(Math.random() * WORDS.length)];\r\n}","import React from \"react\";\r\n\r\nimport { randomWord } from \"./words.js\"\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      behind: \"\",\r\n      completed: \"\",\r\n      upcoming: this.props.initial,\r\n    }\r\n  }\r\n\r\n  handleKeying = (e) => {\r\n    this.processCharacter(e.key);\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeying)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeying)\r\n    clearInterval(this.chaser)\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    this.addUpcoming()\r\n    this.startChaser()\r\n\r\n    if (this.chaser && prevProps.speed !== this.props.speed) {\r\n      this.restartChaser()\r\n    }\r\n  }\r\n\r\n  addUpcoming() {\r\n    if (this.state.upcoming.length < 3) {\r\n      this.setState({\r\n        upcoming: this.state.upcoming.concat(\" \" + randomWord())\r\n      })\r\n    }\r\n  }\r\n\r\n  restartChaser() {\r\n    this.stopChaser()\r\n    this.chaser = setInterval(() => { this.popCompleted() }, this.props.speed)\r\n  }\r\n\r\n  startChaser() {\r\n    if (this.state.completed.length >= 12 && !this.chaser) {\r\n      this.chaser = setInterval(() => { this.popCompleted() }, this.props.speed)\r\n    }\r\n  }\r\n\r\n  stopChaser() {\r\n    clearInterval(this.chaser)\r\n  }\r\n\r\n  popCompleted() {\r\n    let char = this.state.completed[0]\r\n    \r\n    if (char === undefined) {\r\n      this.stopChaser()\r\n\r\n      this.props.onGameOver()\r\n    } else {\r\n      this.setState({\r\n        completed: this.state.completed.slice(1),\r\n        behind: this.state.behind.concat(char)\r\n      })\r\n    }\r\n  }\r\n\r\n  processCharacter(char) {\r\n    if (char === this.state.upcoming[0]) {\r\n      this.setState({\r\n        completed: this.state.completed.concat(char),\r\n        upcoming: this.state.upcoming.slice(1),\r\n      })\r\n\r\n      this.props.onScore(1)\r\n    } else {\r\n      this.props.onIncorrectKey()\r\n    }\r\n  };\r\n\r\n\r\n  completedStyle = {\r\n    color: \"black\",\r\n    borderRight: \"solid\",\r\n    borderRightColor: \"green\",\r\n    borderLeft: \"solid\",\r\n    borderLeftColor: \"red\"\r\n  }\r\n\r\n  upcomingStyle = {\r\n    color: \"gray\"\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <span>{this.state.behind}</span>\r\n          <span style={this.completedStyle}>{this.state.completed}</span>\r\n          <span style={this.upcomingStyle}>{this.state.upcoming}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from \"react\"\r\n\r\nclass GameOver extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span>Game Over</span>\r\n        <p>Characters: {this.props.score}</p>\r\n        <button onClick={this.props.onReplay}>Replay</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GameOver;","import React from \"react\"\r\n\r\nclass Welcome extends React.Component{\r\n  render() {\r\n    const buttonStyle = {\r\n      margine: \"auto\",\r\n      padding: \"24px 48px\",\r\n\r\n      background: \"white\"\r\n    }\r\n    return(\r\n      <div>\r\n        <h1>Type For Your Life</h1>\r\n        <button style={buttonStyle} onClick={this.props.onStart}>Play!</button>\r\n        <h2>How it works:</h2>\r\n        <ol>\r\n          <li>Type the text you see to stay ahead of the red line</li>\r\n          <li>Incorrect keystrokes make the red line chase faster</li>\r\n          <li>Low words-per-minute make the red line faster, but high words-per-minute slow it down</li>\r\n          <li>Get as many characters as you can!</li>\r\n        </ol>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Welcome","import React from \"react\"\r\n\r\nclass WPMMeter extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.active && prevProps.wpm !== this.props.wpm) {\r\n      if (this.props.wpm > this.props.upperThreshold) {\r\n        this.props.onPassUpperThreshold()\r\n      }\r\n\r\n\r\n      if (this.props.wpm < this.props.lowerThreshold) {\r\n        this.props.onPassLowerThreshold()\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let color\r\n    const {active, wpm, lowerThreshold, upperThreshold} = this.props\r\n\r\n    if (active) {\r\n      if (wpm < lowerThreshold) {\r\n        color = \"red\"\r\n      } else if (wpm > upperThreshold) {\r\n        color = \"lightgreen\"\r\n      } else {\r\n        color = \"white\"\r\n      }\r\n    }\r\n\r\n    const style = {\r\n      marginTop: \"200px\",\r\n      padding: \"1em\",\r\n      \r\n      background: color,\r\n      border: \"solid black\",\r\n      borderRadius: \"1em\"\r\n    }\r\n\r\n    return (\r\n      <div style={style}>\r\n        <span>WPM: {this.props.wpm}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WPMMeter","import React from \"react\";\nimport Game from \"./Game\"\nimport GameOver from \"./GameOver\"\nimport Welcome from \"./Welcome\"\nimport WPMMeter from \"./WPMMeter\"\n\nconst MODE = {\n  PREGAME: \"pregame\",\n  PLAYING: \"playing\",\n  GAME_OVER: \"game_over\"\n}\n\nconst INITIAL_PHRASE = \"Ready set go\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      mode: MODE.PREGAME,\n      score: 0,\n\n      speed: 350, // speed of chaser\n\n      //WPM Related - perhaps relocate\n      wpm: 0,\n      wpmSample: 0,\n    }\n  }\n\n  componentDidMount() {\n    this.initializeWPMCalculator()\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.wpmCalculator)\n  }\n\n  initializeWPMCalculator() {\n    let seconds = 2\n    this.wpmCalculator = setInterval(() => { this.calculateWPM(seconds) }, seconds * 1000)\n  }\n  \n  calculateWPM(seconds) {\n    let wpm = (this.state.wpmSample * (60 / seconds)) / 5\n    this.setState({ \n      wpm: wpm,\n      wpmSample: 0\n    })\n  }\n\n  gameOver() {\n    this.setState({ mode: MODE.GAME_OVER })\n  }\n\n  decreaseSpeed() {\n    this.setState({ speed: this.state.speed + 25 })\n  }\n\n  increaseSpeed() {\n    this.setState({ speed: [this.state.speed - 25, 0].sort()[1] })\n  }\n\n  increaseScore(integer) {\n    this.setState({ score: this.state.score + integer})\n  }\n\n  incrementWPMSample() {\n    this.setState({ wpmSample: this.state.wpmSample + 1})\n  }\n\n  replay() {\n    this.setState({ \n      mode: MODE.PLAYING,\n      score: 0\n    })\n  }\n\n  render() {\n    let content, sidebar;\n\n    switch (this.state.mode) {\n      case MODE.PREGAME:\n        content = <Welcome onStart={() => this.replay()}/>\n        break;\n      case MODE.PLAYING:\n        content = <Game \n          initial={INITIAL_PHRASE}\n          speed={this.state.speed}\n          onGameOver={() => this.gameOver()}\n          onIncorrectKey={() => this.increaseSpeed()}\n          onScore={(int) => {\n            this.increaseScore(int)\n            this.incrementWPMSample()\n          }}\n        />;\n\n        sidebar = <WPMMeter\n          active={this.state.score > INITIAL_PHRASE.length} \n          lowerThreshold={30}\n          upperThreshold={90}\n          wpm={this.state.wpm} \n          onPassLowerThreshold={() => this.increaseSpeed() }\n          onPassUpperThreshold={() => this.decreaseSpeed() }\n        />\n\n        break;\n      case MODE.GAME_OVER:\n        content = <GameOver \n          score={this.state.score}\n          onReplay={() => this.replay()}  \n        />;\n        break\n      default:\n        break\n    }\n\n    const mainStyle = {\n      float: \"left\",\n      fontSize: \"48px\",\n    }\n\n    const sidebarStyle = {\n      float: \"left\",\n      marginRight: \"50px\",\n    }\n\n    return (\n      <div className=\"container\">\n        <div id=\"sidebar\" style={sidebarStyle}>\n          {sidebar}\n        </div>\n        <div id=\"main\" style={mainStyle}>\n          {content}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}